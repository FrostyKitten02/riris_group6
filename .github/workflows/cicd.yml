name: CI/CD Pipeline

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules frontend  # Caching odvisnosti (frontend)
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies (frontend)
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test -- --coverage

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: |
            frontend/dist/

      - name: Upload frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: ./frontend/coverage/

  docker-build-frontend:
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend Docker image
        working-directory: ./frontend
        run: |
          docker build -t afridau/afridau:frontend-latest .
          docker tag afridau/afridau:frontend-latest afridau/afridau:frontend-${{ github.run_number }}
          docker push afridau/afridau:frontend-latest
          docker push afridau/afridau:frontend-${{ github.run_number }}
  deploy-frontend:
    needs: docker-build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: whoami


      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat >> ~/.ssh/config <<-END
            Host staging
              HostName $SSH_HOST
              Port $SSH_PORT
              User $SSH_USER
              IdentityFile ~/.ssh/id_rsa
              StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}

      - name: Attempt SSH connection
        run: ssh staging
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}

  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js for backend
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules backend  # Caching odvisnosti (frontend)
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install dependencies (backend)
        working-directory: ./backend
        run: npm install

      - name: Run backend tests
        working-directory: ./backend
        run: npm run test -- --coverage

      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: |
            backend/
            backend/node_modules/

      - name: Upload backend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./backend/coverage/

  docker-build-backend:
    needs: backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        working-directory: ./backend
        run: |
          docker build -t afridau/afridau:backend-latest .
          docker tag afridau/afridau:backend-latest afridau/afridau:backend-${{ github.run_number }}
          docker push afridau/afridau:backend-latest
          docker push afridau/afridau:backend-${{ github.run_number }}

  upload-artifacts:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    steps:
      - name: Download frontend coverage report
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: ./frontend-coverage

      - name: Download backend coverage report
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: ./backend-coverage
